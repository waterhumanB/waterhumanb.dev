{"pageProps":{"slug":"코어-자바스크립트-질문-리스트","allBlogData":[{"slug":"코어-자바스크립트-질문-리스트","title":"코어 자바스크립트 질문 리스트","date":"2024년 11월 25일","description":"코어 자바스크립트를 읽고 프론트엔드 개발자로 생각 할 수 있는 기술면접 질문 리스트","thumbnail":"","category":"JavaScript"},{"slug":"자바스크립트-TDD-With-Next-Step","title":"자바스크립트 TDD와 jest 기본 사용법","date":"2023년 7월 23일","description":"자바스크립트 TDD와 Jest 기본 사용 법 및 Next Step 시작","thumbnail":"","category":"JavaScript"},{"slug":"next.js-블로그-회고","title":"Next.js 블로그 첫 번째 회고","date":"2023년 6월 25일","description":"Next.js 블로그 개발 기능 설명 및 첫 번째 회고","thumbnail":"/profile.jpg","category":"Next.js"},{"slug":"점진적과부하-프로젝트-회고","title":"점진적과부하 프로젝트 회고","date":"2023년 5월 22일","description":"점진적과부하 개인 프로젝트 설명 및 회고","thumbnail":"","category":"React"},{"slug":"라이브러리-없이-캘린더-만들기","title":"라이브러리 없이 캘린더 만들기","date":"2023년 5월 15일","description":"라이브러리 없이 Date 메소드 활용 캘린더 만들기","thumbnail":"/assets/images/blog/calendar.png","category":"React"},{"slug":"라이브러리-없이-그래프,-차트-만들기","title":"라이브러리 없이 그래프, 차트 만들기","date":"2023년 5월 08일","description":"라이브러리 없이 SVG 태그를 활용 막대 그래프와 도넛 차트를 만드는 방법","thumbnail":"/assets/images/blog/SVG tag graphs and charts.png","category":"HTML"},{"slug":"Redux와-데이터정규화","title":"Redux와 데이터정규화","date":"2023년 5월 03일","description":"점진적 과부하 프로젝트에서 사용했던 리덕스와 데이터 정규화","thumbnail":"","category":"DataBase"},{"slug":"var-let-const-hoisting","title":"var, let, const 특징 및 호이스팅","date":"2023년 4월 25일","description":"var, let, const 키워드들의 특징과 차이점과 호이스팅에 대한 정리","thumbnail":"","category":"JavaScript"},{"slug":"StoryBook으로-컴포넌트-테스트","title":"StoryBook으로 컴포넌트 테스트","date":"2023년 4월 18일","description":"StoryBook을 사용하여 React에서 컴포넌트 테스트를 해보자!","thumbnail":"","category":"Storybook"},{"slug":"Controlled-컴포넌트와 UnCotrolled-컴포넌트의-차이점","title":"Controlled 컴포넌트와 UnControlled 컴포넌트 차이점","date":"2023년 4월 12일","description":"React에서 Controlled 컴포넌트와 UnControlled 컴포넌트의 차이점을 알아보자","thumbnail":"","category":"React"},{"slug":"React에서-컴포넌트와-로직-분리하는-방법","title":"React에서 컴포넌트와 로직 분리하는 방법","date":"2023년 4월 03일","description":"React에서 Hook, Utils, Domain으로 컴포넌트와 로직 분리하는 이유와 방법","thumbnail":"","category":"React"}],"fallback":{"@\"Props\",\"코어-자바스크립트-질문-리스트\",":{"slug":"코어-자바스크립트-질문-리스트","content":"\n## 1장 데이터 타입\n\n<details markdown=\"1\"><summary>Map,Set의 개념</summary>\nddddd\n</details>\n<details markdown=\"1\"><summary>불변값이 필요한 이유</summary>\ncccccc\n</details>\n<details markdown=\"1\"><summary>얕은 복사와 깊은 복사의 차이</summary>\ncccccc\n</details>\n<details markdown=\"1\"><summary>객체의 참조 과정을 설명하기</summary>\nddd\n</details>\n<details markdown=\"1\"><summary>call by value vs call by reference</summary>\nddddd\n</details>\n\n## 2장 실행컨텍스트\n\n<details markdown=\"1\"><summary>실행 컨텍스트란 무엇인가요?</summary>\nddddd\n</details>\n<details markdown=\"1\"><summary>콜 스택이 무엇인지 설명해주세요</summary>\nddddd\n</details>\n<details markdown=\"1\"><summary>호이스팅은 왜 일어나는 걸까요?</summary>\nddddd\n</details>\n<details markdown=\"1\"><summary>호이스팅 현상과 실행 컨텍스트는 어떤 연관이 있을까?</summary>\nddddd\n</details>\n<details markdown=\"1\"><summary>스코프에 의 개념에 대해 설명해주세요</summary>\nddddd\n</details>\n<details markdown=\"1\"><summary>Lexical Scope는 무엇일까요?</summary>\nddddd\n</details>\n<details markdown=\"1\"><summary>스코프 체인은 무엇이죠?</summary>\nddddd\n</details>\n<details markdown=\"1\"><summary>스코프체인을 실행컨텍스트에 연관지어 설명해보기</summary>\nddddd\n</details>\n<details markdown=\"1\"><summary>이벤트 루프란?e</summary>\nddddd\n</details>\n<details markdown=\"1\"><summary>이벤트 루프의 구조는 어떻게 이루어져 있을까요?</summary>\nddddd\n</details>\n<details markdown=\"1\"><summary>setTimeout(fn, 0) 코드가 실행되는 과정을 이벤트 루프 구조를 통해 설명해주세요.</summary>\nddddd\n</details>\n<details markdown=\"1\"><summary>실행 컨텍스트의 구조는 어떻게 되어있는지?</summary>\nddddd\n</details>\n<details markdown=\"1\"><summary>environment record가 무엇인가요?</summary>\nddddd\n</details>\n<details markdown=\"1\"><summary>environment record와 호이스팅이랑은 무슨 연관이 있나요?</summary>\nddddd\n</details>\n<details markdown=\"1\"><summary>tdz</summary>\nddddd\n</details>\n<details markdown=\"1\"><summary>let, const 호이스팅 되는지</summary>\nddddd\n</details>\n\n## 3장 this\n\n<details markdown=\"1\"><summary>함수 선언식과 화살표 함수의 차이</summary>\nddddd\n</details>\n<details markdown=\"1\"><summary>명시적 this 바인딩과 암묵적 this 바인딩에 대해 설명해주세요</summary>\nddddd\n</details>\n<details markdown=\"1\"><summary>화살표 함수는 this 바인딩이 어떻게 될까요?</summary>\nddddd\n</details>\n<details markdown=\"1\"><summary>apply와 call이 무엇이고, 서로는 무엇이 다른가요?</summary>\nddddd\n</details>\n\n## 4장 콜백 함수\n\n<details markdown=\"1\"><summary>동기와 비동기에 대해 설명해주세요.</summary>\nddddd\n</details>\n\n<details markdown=\"1\"><summary>blocking과 non-blocking, sync와 async에 대해 설명해주세요.</summary>\nddddd\n</details>\n\n<details markdown=\"1\"><summary>동기와 비동기를 각각 어떤 작업에 사용할까요?</summary>\nddddd\n</details>\n\n<details markdown=\"1\"><summary>자바스크립트에서 비동기를 다루는 방식 3가지에 대해 설명해주세요. (대기업 면접에서 많이 나오는 질문)</summary>\nddddd\n</details>\n\n<details markdown=\"1\"><summary>callback 패턴을 사용하게 되면 callback hell의 단점이 있는데요. callback hell의 가독성을 어느정도 해결하는 방법을 알고 계실까요? (Promise, async/await을 사용 X)</summary>\nddddd\n</details>\n\n<details markdown=\"1\"><summary>error-first callback 패턴에 대해 설명해주세요.</summary>\nddddd\n</details>\n\n<details markdown=\"1\"><summary>Promise는 무엇일까요?</summary>\nddddd\n</details>\n\n<details markdown=\"1\"><summary>then, catch, finally 메소드에 대해 설명해주세요.</summary>\nddddd\n</details>\n\n<details markdown=\"1\"><summary>then 메소드는 인자로 무엇을 받을 수 있나요?</summary>\nddddd\n</details>\n\n<details markdown=\"1\"><summary>finally는 어떠한 경우에 사용하면 좋을까요?</summary>\nddddd\n</details>\n\n<details markdown=\"1\"><summary>Promise.all, Promise.allSettled, Promise.race에 대해 간단하게 설명해주세요.</summary>\nddddd\n</details>\n\n<details markdown=\"1\"><summary>비동기를 다루기 위해서 어떤 방식을 사용하는것이 좋다고 생각하시나요?</summary>\nddddd\n</details>\n\n<details markdown=\"1\"><summary>callback, Promise, async/await을 사용할 때 각각 에러처리는 어떻게 할 수 있을까요?</summary>\nddddd\n</details>\n\n<details markdown=\"1\"><summary>async 키워드는 무엇을 의미할까요?</summary>\nddddd\n</details>\n\n<details markdown=\"1\"><summary>함수에 async 키워드를 붙이면 리턴값은 어떻게 변할까요?</summary>\nddddd\n</details>\n\n<details markdown=\"1\"><summary>await 키워드는 어디에 사용할까요?</summary>\nddddd\n</details>\n\n<details markdown=\"1\"><summary>일급 함수는 무엇일까요?</summary>\nddddd\n</details>\n\n<details markdown=\"1\"><summary>일급 함수와 일급 함수가 아닌 것의 차이는 무엇일까요?</summary>\nddddd\n</details>\n\n<details markdown=\"1\"><summary>함수형 프로그래밍에서의 람다(lambda)란 무엇일까요?</summary>\nddddd\n</details>\n\n<details markdown=\"1\"><summary>콜백 함수는 무엇일까요?</summary>\nddddd\n</details>\n\n<details markdown=\"1\"><summary>콜백 함수를 사용하는 경우는 어떠한 것들이 있을까요?</summary>\nddddd\n</details>\n\n<details markdown=\"1\"><summary>콜백 함수를 사용하는 간단한 예제 코드를 작성해주실 수 있나요?</summary>\nddddd\n</details>\n\n## 5장 클로저\n\n<details markdown=\"1\"><summary>클로저란 무엇인가요?</summary>\nddddd\n</details>\n\n<details markdown=\"1\"><summary>클로저 구현해보기</summary>\nddddd\n</details>\n\n<details markdown=\"1\"><summary>클로저와 스코프를 연결지어서 설명해주세요</summary>\nddddd\n</details>\n\n## 6장 프로토타입\n\n<details markdown=\"1\"><summary>자바스크립트에서 상속과 그냥 값을 할당해주는것의 차이가 무엇인지?</summary>\nddddd\n</details>\n\n<details markdown=\"1\"><summary>프로토타입이란?</summary>\nddddd\n</details>\n\n<details markdown=\"1\"><summary>인스턴스란?</summary>\nddddd\n</details>\n\n<details markdown=\"1\"><summary>프로토타입 체이닝이란?</summary>\nddddd\n</details>\n\n<details markdown=\"1\"><summary>Object.create란?</summary>\nddddd\n</details>\n\n<details markdown=\"1\"><summary>프로토타입과 클래스의 차이점</summary>\nddddd\n</details>\n\n## 7장 클래스\n\n<details markdown=\"1\"><summary>클래스란?</summary>\nddddd\n</details>\n\n<details markdown=\"1\"><summary>OOP란?</summary>\nddddd\n</details>\n\n<details markdown=\"1\"><summary>클래스에서 super의 의미</summary>\nddddd\n</details>\n\n<details markdown=\"1\"><summary>클래스의 constructor가 무엇인지</summary>\nddddd\n</details>\n","title":"코어 자바스크립트 질문 리스트","date":"2024년 11월 25일","description":"코어 자바스크립트를 읽고 프론트엔드 개발자로 생각 할 수 있는 기술면접 질문 리스트","thumbnail":"","category":"JavaScript"}}},"__N_SSG":true}